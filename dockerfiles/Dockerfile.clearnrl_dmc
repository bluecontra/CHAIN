ARG UBUNTU_VERSION=20.04
ARG ARCH=
ARG CUDA=11.4.0

# FROM nvidia/cudagl${ARCH:+-$ARCH}:${CUDA}-base-ubuntu${UBUNTU_VERSION} as base
FROM nvidia/cudagl:11.4.2-base-ubuntu20.04 as base
# ARCH and CUDA are specified again because the FROM directive resets ARGs
# (but their default value is retained if set previously)

ARG UBUNTU_VERSION
ARG ARCH
ARG CUDA
ARG CUDNN=7.6.5.32-1

SHELL ["/bin/bash", "-c"]


ENV DEBIAN_FRONTEND="noninteractive"
# See http://bugs.python.org/issue19846
ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
ENV PATH /opt/conda/bin:$PATH

RUN apt-get update --fix-missing && apt-get install -y wget bzip2 ca-certificates \
    libglib2.0-0 libxext6 libsm6 libxrender1 \
    git mercurial subversion

RUN apt-get install -y --no-install-recommends \
                build-essential \
                cmake \
    vim \
    ffmpeg \
    unzip swig libfreetype6-dev \
    libosmesa6-dev patchelf ffmpeg \
    freeglut3-dev build-essential libx11-dev libxmu-dev libxi-dev libgl1-mesa-glx libglu1-mesa libglu1-mesa-dev libglew1.6-dev mesa-utils


RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /tmp/miniconda.sh && \
    /bin/bash /tmp/miniconda.sh -b -p /opt/conda && \
    rm /tmp/miniconda.sh && \
    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". /opt/conda/etc/profile.d/conda.sh" >> /etc/bash.bashrc

RUN conda update -y --name base conda && conda clean --all -y

RUN conda create --name dmc python=3.9 pip
RUN echo "source activate dmc" >> ~/.bashrc
## Make it so you can install things to the correct version of pip
ENV PATH /opt/conda/envs/dmc/bin:$PATH
RUN source activate dmc


## You can change this to a folder you prefer.
RUN mkdir /root/playground
RUN mkdir /root/projects

RUN ls

# Install the requirements for your learning code.

## Install pytorch
RUN conda install pytorch torchvision torchaudio cudatoolkit=11.3 -c pytorch

# Install Cleanrl (https://github.com/vwxyzjn/cleanrl)
## Copy local files (one can also directly install via github if the network works)
COPY ./cleanrl /root/playground/cleanrl

WORKDIR /root/playground/cleanrl

## Install dependencies of clean rl
RUN pip install -r requirements/requirements.txt
RUN pip install -r requirements/requirements-mujoco.txt
RUN pip install -r requirements/requirements-dm_control.txt

# COPY you code to the docker image here.
# e.g.
# COPY tools/openAIGym.py main.py

## Make DMC headless run
RUN echo "export MUJOCO_GL=glfw" >> ~/.bashrc
RUN echo "export AKAK=thy" >> ~/.bashrc

## Check the file were copied
RUN ls && sleep 5